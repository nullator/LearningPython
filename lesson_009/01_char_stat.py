# -*- coding: utf-8 -*-

# Подсчитать статистику по буквам в романе Война и Мир.
# Входные параметры: файл для сканирования
# Статистику считать только для букв алфавита (см функцию .isalpha() для строк)
#
# Вывести на консоль упорядоченную статистику в виде
# +---------+----------+
# |  буква  | частота  |
# +---------+----------+
# |    А    |   77777  |
# |    Б    |   55555  |
# |   ...   |   .....  |
# |    a    |   33333  |
# |    б    |   11111  |
# |   ...   |   .....  |
# +---------+----------+
# |  итого  | 9999999  |
# +---------+----------+
#
# Упорядочивание по частоте - по убыванию. Ширину таблицы подберите по своему вкусу
# Требования к коду: он должен быть готовым к расширению функциональности. Делать сразу на классах.
from pprint import pprint

stat = {}
char_list = []
char_stat = 0

with open(file='voyna-i-mir.txt', mode='r', encoding='cp1251') as file:
    for line in file:
        for char in line:
            if char.isalpha():
                if char in stat:
                    stat[char] += 1
                else:
                    stat[char] = 1
                char_stat += 1

char_list = list(stat.items())
# char_list.sort()
# pprint(char_list)
# char_list.sort(key=lambda i: i[1])                  # по частоте по возрастанию
# pprint(char_list)
char_list.sort(key=lambda i: i[1], reverse=True)    # по частоте по убыванию
# pprint(char_list)


print('+---------+---------+')
print('|  буква  | частота |')
print('+---------+---------+')
for char in char_list:
    print(f'|{char[0]:^9}|{char[1]:^9}|')
print('+---------+---------+')
print(f'|  итого  |{char_stat:^9}|')
print('+---------+---------+')




# После выполнения первого этапа нужно сделать упорядочивание статистики
#  - по частоте по возрастанию
#  - по алфавиту по возрастанию
#  - по алфавиту по убыванию
# Для этого пригодится шаблон проектирование "Шаблонный метод" см https://goo.gl/Vz4828
